#!/bin/bash

# Exit silently if the graphics driver is not installed.
[[ ! -f /opt/nvidia/bin/nvidia-settings ]] && exit 0

<<<<<<< HEAD
# Exit silently if the the graphics driver does not meet requirement.
version=$(/opt/nvidia/bin/nvidia-settings --version | grep version)
version=${version##* } # extract the version string from the line
version=$(echo "$version" | cut -d. -f1-2) # want major and minor, not revision
=======
echo "building nv-codec-headers"

version=$(/opt/nvidia/bin/nvidia-settings --version | grep version)
version=${version##* } # extract the version string from the line
version=$(echo $version | cut -d. -f1-2) # want major and minor, not revision
>>>>>>> e19cb842bf8a0e89c0a326ddbeb79b8f3b39d154

if [[ $(bc -l <<< "${version} < 470.57") -eq 1 ]]; then
    echo "$0: NVIDIA graphics driver is older than 470.57, skipping..."
    exit 0
fi

nvver="11.1.5.1"
echo "building nv-codec-headers"

mkdir -p builddir && cd builddir || exit $?

builddir="${PWD}"
cleanup(){
cd "${builddir}" ; rm -fr "nv-codec-headers-${nvver}" && echo -e "\nDirectory cleaned!";
}
trap cleanup EXIT


find . -type f -mtime +1 -exec rm -rf {} \; 

if [[ ! -f nv-codec-headers-${nvver}.tar.gz ]]; then
    url="https://github.com/FFmpeg/nv-codec-headers/releases/download/n${nvver}/nv-codec-headers-${nvver}.tar.gz"
    echo "curl -LO ${url}"
    curl -LO ${url}
fi

if ! tar tzf nv-codec-headers-${nvver}.tar.gz &>/dev/null; then
    echo corrupted archive, skipping...
    exit 1
fi

tar xzf nv-codec-headers-${nvver}.tar.gz

if [[ -d nv-codec-headers-${nvver} ]]; then
    cd nv-codec-headers-${nvver} || exit $?
    make PREFIX=/usr/local && \
    make install
fi

